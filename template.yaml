AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  writeToTable:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-writeToServerTable
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: writeToTable
      CodeUri: src/writeToTable
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref ServerTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ServerTable
          TABLE_ARN: !GetAtt ServerTable.Arn
          FLICKR_API_KEY: !Ref EnvConfigflickrapiKeyAsString
    Metadata:
      StackeryName: writeToTable
  sendDailyEmail:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-sendDailyEmail
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: sendDailyEmail
      CodeUri: src/sendDailyEmail
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref ServerTable
        - SESCrudPolicy:
            IdentityName: anna.spysz@stackery.io
      Environment:
        Variables:
          TABLE_NAME: !Ref ServerTable
          TABLE_ARN: !GetAtt ServerTable.Arn
          TO_EMAIL: !Ref EnvConfigserverEmailtoEmailAsString
          FROM_EMAIL: !Ref EnvConfigserverEmailfromEmailAsString
      Events:
        Timer:
          Type: Schedule
          Properties:
            Schedule: cron(0 16 * * ? *)
          Metadata:
            StackeryName: dailyEmailTrigger
    Metadata:
      StackeryName: sendDailyEmail
  ServerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: !Sub ${AWS::StackName}-ServerTable
    Metadata:
      StackeryName: ServerTable
  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      BackupRetentionPeriod: '1'
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      Engine: postgres
      MasterUsername: root
      MasterUserPassword: password
      AllocatedStorage: '5'
      AllowMajorVersionUpgrade: true
      AutoMinorVersionUpgrade: true
      CopyTagsToSnapshot: true
      DBInstanceClass: db.t2.micro
      EngineVersion: '11.1'
      MultiAZ: false
      MaxCapacity: 192
      StorageType: gp2
      PubliclyAccessible: true
      VPCSecurityGroups:
        - !Ref DatabaseSecurityGroup
  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Database ${ResourceName} VPC Subnets
        - ResourceName: Database
      SubnetIds: !Ref DefaultVPCSubnets
      Tags:
        - Key: Name
          Value: !Sub
            - Stack ${StackTagName} Environment ${EnvironmentTagName} Database ${ResourceName} VPC Subnets
            - ResourceName: Database
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Database Security Group
      SecurityGroupIngress:
        CidrIp: 0.0.0.0/0
        FromPort: 5432
        IpProtocol: tcp
        ToPort: 5432
      Tags:
        - Key: Name
          Value: !Sub
            - Stack ${StackTagName} Environment ${EnvironmentTagName} Database ${ResourceName} VPC Security Group
            - ResourceName: Database
      VpcId: !Ref DefaultVPCId
Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  EnvConfigflickrapiKeyAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/flickr/apiKey
  EnvConfigserverEmailtoEmailAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/serverEmail/toEmail
  EnvConfigserverEmailfromEmailAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/serverEmail/fromEmail
  DefaultVPCId:
    Type: AWS::EC2::VPC::Id
    Description: AWS account-specific default VPC ID (injected by Stackery at deployment time)
  DefaultVPCSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: AWS account-specific default VPC subnets (injected by Stackery at deployment time)
Metadata:
  EnvConfigParameters:
    EnvConfigflickrapiKeyAsString: flickr.apiKey
    EnvConfigserverEmailtoEmailAsString: serverEmail.toEmail
    EnvConfigserverEmailfromEmailAsString: serverEmail.fromEmail