AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  writeToTable:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-writeToServerTable
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: writeToTable
      CodeUri: src/writeToTable
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref ServerTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ServerTable
          TABLE_ARN: !GetAtt ServerTable.Arn
          FLICKR_API_KEY: !Ref EnvConfigflickrapiKeyAsString
      Events:
        testingAPIGET:
          Type: Api
          Properties:
            Path: /
            Method: GET
            RestApiId: !Ref testingAPI
    Metadata:
      StackeryName: writeToTable
  sendDailyEmail:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-sendDailyEmail
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: sendDailyEmail
      CodeUri: src/sendDailyEmail
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref ServerTable
      Environment:
        Variables:
          TABLE_NAME: !Ref ServerTable
          TABLE_ARN: !GetAtt ServerTable.Arn
      Events:
        Timer:
          Type: Schedule
          Properties:
            Schedule: cron(0 16 * * ? *)
          Metadata:
            StackeryName: dailyEmailTrigger
    Metadata:
      StackeryName: sendDailyEmail
  ServerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: !Sub ${AWS::StackName}-ServerTable
    Metadata:
      StackeryName: ServerTable
  testingAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${StackTagName} Environment ${EnvironmentTagName}
        - ResourceName: testingAPI
      StageName: !Ref EnvironmentAPIGatewayStageName
      DefinitionBody:
        swagger: '2.0'
        info: {}
        paths:
          /:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${writeToTable.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
    Metadata:
      StackeryName: testingAPI
Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  EnvironmentAPIGatewayStageName:
    Type: String
    Description: Environment name used for API Gateway Stage names (injected by Stackery at deployment time)
  EnvConfigflickrapiKeyAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/flickr/apiKey
Metadata:
  EnvConfigParameters:
    EnvConfigflickrapiKeyAsString: flickr.apiKey